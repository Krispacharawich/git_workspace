{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a sample for swagger-maven-plugin",
    "version" : "v1",
    "title" : "Swagger Maven Plugin Sample",
    "termsOfService" : "http://www.github.com/kongchen/swagger-maven-plugin",
    "contact" : {
      "name" : "Krispacharawich",
      "url" : "http://Krispacharawich.com",
      "email" : "Krispacharawich@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "www.localhost.com:8080",
  "basePath" : "/",
  "tags" : [ {
    "name" : "Pets"
  }, {
    "name" : "TestSwagger"
  }, {
    "name" : "custom"
  }, {
    "name" : "pet"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/api/TestSwagger" : {
      "get" : {
        "tags" : [ "TestSwagger" ],
        "summary" : "Say Hello by Swagger",
        "description" : "",
        "operationId" : "getHello",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain" ],
        "responses" : {
          "200" : {
            "description" : "Successfully say Hello",
            "schema" : {
              "type" : "string"
            }
          },
          "401" : {
            "description" : "You are not authorized to get Hello"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "The resource you were trying to reach is not found"
          }
        }
      },
      "post" : {
        "tags" : [ "custom" ],
        "summary" : "Post Hello to Swagger ",
        "description" : "",
        "operationId" : "postHello",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "msg",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully post hello to swagger",
            "schema" : {
              "type" : "string"
            }
          },
          "401" : {
            "description" : "Yout are not authorized to get post hello to swagger"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "The resource you were trying to reach is not found"
          }
        }
      }
    },
    "/api/TestSwagger/{id}" : {
      "get" : {
        "tags" : [ "custom" ],
        "summary" : "Say Hello By Swagger ID ",
        "description" : "",
        "operationId" : "getHelloById",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully say hello by id",
            "schema" : {
              "type" : "string"
            }
          },
          "401" : {
            "description" : "Yout are not authorized to get Hello By Id"
          },
          "403" : {
            "description" : "Accessing the resource you were trying to reach is forbidden"
          },
          "404" : {
            "description" : "The resource you were trying to reach is not found"
          }
        }
      }
    },
    "/pets/{id}" : {
      "get" : {
        "tags" : [ "Pets" ],
        "summary" : "Find pet by ID",
        "description" : "Returns a pet when 0 < ID <= 10. ID > 10 or non-integers will simulate API error conditions",
        "operationId" : "getPetById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of pet that needs to be fetched",
          "required" : true,
          "type" : "integer",
          "maximum" : 10.0,
          "minimum" : 1.0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Nice!",
            "schema" : {
              "$ref" : "#/definitions/Pet"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "404" : {
            "description" : "Pet not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ]
      }
    }
  },
  "definitions" : {
    "ApiResponse" : {
      "type" : "object"
    },
    "Category" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Category"
      }
    },
    "Pet" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "category" : {
          "$ref" : "#/definitions/Category"
        },
        "name" : {
          "type" : "string"
        },
        "photoUrls" : {
          "type" : "array",
          "xml" : {
            "name" : "photoUrl",
            "wrapped" : true
          },
          "items" : {
            "type" : "string"
          }
        },
        "tags" : {
          "type" : "array",
          "xml" : {
            "name" : "tag",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "status" : {
          "type" : "string",
          "description" : "pet status in the store",
          "enum" : [ "available", "pending", "sold" ]
        }
      },
      "xml" : {
        "name" : "Pet"
      }
    },
    "Tag" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Tag"
      }
    }
  }
}